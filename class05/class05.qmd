---
title: "Class 5 Data Visualization with ggplot2"
author: "Jason (PID: A15796973)"
format: pdf
---

**Questions**

Q1. For which phases is data visualization important in our scientific workflows? 
All of the above

Q2. True or False? The ggplot2 package comes already installed with R? 
FALSE

Q3. Which plot types are typically NOT used to compare distributions of numeric variables? 
Network graphs

Q4. Which statement about data visualization with ggplot2 is incorrect? 
ggplot2 is the only way to create plots in R

Q5. Which geometric layer should be used to create scatter plots in ggplot2? 
geom_point()

Q6. In your own RStudio can you add a trend line layer to help show the relationship between the plot variables with the geom_smooth() function?
```{r}
library(ggplot2)
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth()
```

Q7. Argue with geom_smooth() to add a straight line from a linear model without the shaded standard error region?
```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE)
```

Q8. Can you finish this plot by adding various label annotations with the labs() function and changing the plot look to a more conservative “black & white” theme by adding the theme_bw() function:

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE) +
  labs(title="Speed and Stopping Distances of Cars",
       x="Speed (MPH)", 
       y="Stopping Distance (ft)",
       subtitle = "This subtitle is very informative super informative I have never seen anything more informative",
       caption="Dataset: 'cars'") +
  theme_bw()
```

***For questions 9-12***

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
nrow(genes)
colnames(genes)
ncol(genes)
table(genes["State"])
round( table(genes["State"])/nrow(genes) * 100, 2 )
```

Q9. Use the nrow() function to find out how many genes are in this dataset. What is your answer? 
5196

Q10. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find? 
4

Q11. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 
127

Q12. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset? 
2.44

Q13. Complete the code below to produce the following plot

```{r}
ggplot(genes) + 
    aes(x=Condition1, y=Condition2) +
    geom_point()
```

***Post question 13 graphs followed by question 14***

```{r}
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State) +
    geom_point()
p
```

```{r}
p + scale_colour_manual( values=c("blue","gray","red") )

```

Q14. Nice, now add some plot annotations to the p object with the labs() 
function so your plot looks like the following:

```{r}
p + labs(title="Gene Expresion Changes Upon Drug Treatment",
         x="Control (no drug) ",
         y="Drug Treatment") +
  scale_colour_manual( values=c("blue","gray","red") )

```


**Section 7: Going Further**

```{r}
##install.packages("gapminder")
library(gapminder)

##install.packages("dplyr")
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```

Q15. Complete the code below to produce a first basic scater plot of this gapminder_2007 dataset:

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point()
```

****Post Question 15 Stuff****
```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, color = pop) +
  geom_point(alpha=0.8)
```

```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, size = pop) +
  geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)
```

Q16. Can you adapt the code you have learned thus far to reproduce our gapminder scatter plot for the year 1957? What do you notice about this plot is it easy to compare with the one for 2007?

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop) +
  geom_point(alpha=0.7) + 
  scale_size_area(max_size = 10) 
```

Q17. Do the same steps above but include 1957 and 2007 in your input dataset for ggplot(). You should now include the layer facet_wrap(~year) to produce the following plot:

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957) + 
  geom_point(aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop), alpha=0.7) + 
  scale_size_area(max_size = 10) +
  facet_wrap(~year)
```


## Using GGPLOT

The ggplot2 package needs to be installed as it does not come with 
R "out of the box".

We use the `install.packages()` function to do this.

```{r}
head(cars)
```

To use ggplot I need to load it up before I can call any of the functions in the package. I need to do this with the `library()` function.

```{r}
library(ggplot2)
ggplot()
```

All ggplot figures have at least 3 things:
- data (the stuff we want to plot)
- aesthetics mapping (aes vales)
-geoms

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```

ggplot is not the only graphing system in R there are lots of others. There is eve "base R" graphics.


```{r}
plot(cars)
```

